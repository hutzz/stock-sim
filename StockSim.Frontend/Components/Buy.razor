@using StockSim.Frontend.Models
@using StockSim.Frontend.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@inject ITokenService TokenService
@inject IStockService StockService

<div>
    <EditForm Model="@stock" OnValidSubmit="Valid" OnInvalidSubmit="Invalid" class="form">
        <DataAnnotationsValidator />
        <h4>Buy</h4>
        <label class="input-label" for="quantity">Quantity</label>
        <InputNumber id="quantity" @bind-Value="_quantity" />
        <ValidationMessage For="() => stock.Quantity" />
        <input id="submit" type="submit" />
    </EditForm>
</div>

@code {
    [Parameter]
    public string? Symbol { get; set; }
    [Parameter]
    public EventCallback<BuySellDto> OnBuy { get; set; }
    private int _quantity { get; set; }
    public BuySellDto stock = new();
    protected override void OnInitialized() {
        Console.WriteLine(Symbol);
    }
    private async Task Valid() {
        stock = new() { Symbol = Symbol, Quantity = _quantity };
        await OnBuy.InvokeAsync(stock);
    }
    private void Invalid() {
        Console.WriteLine("HOW THE FUCK");
    }
}